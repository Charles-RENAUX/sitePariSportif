From: <Saved by Blink>
Snapshot-Content-Location: https://bertvv.github.io/cheat-sheets/MySQL-MariaDB.html
Subject: Useful MySQL/MariaDB queries | cheat-sheets
Date: Mon, 7 Dec 2020 14:13:39 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--cGYyp5WzfjFzKzPd8YSj7vRRnF5ZSX5dfTdd2utQzR----"


------MultipartBoundary--cGYyp5WzfjFzKzPd8YSj7vRRnF5ZSX5dfTdd2utQzR----
Content-Type: text/html
Content-ID: <frame-3EAF42DCDFDF745D2172AA7E69A986B5@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://bertvv.github.io/cheat-sheets/MySQL-MariaDB.html

<!DOCTYPE html><html lang=3D"en-US"><head><meta http-equiv=3D"Content-Type"=
 content=3D"text/html; charset=3DUTF-8">
   =20
    <meta http-equiv=3D"X-UA-Compatible" content=3D"IE=3Dedge">
    <meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=
=3D1">

<!-- Begin Jekyll SEO tag v2.6.1 -->
<title>Useful MySQL/MariaDB queries | cheat-sheets</title>
<meta name=3D"generator" content=3D"Jekyll v3.9.0">
<meta property=3D"og:title" content=3D"Useful MySQL/MariaDB queries">
<meta property=3D"og:locale" content=3D"en_US">
<meta name=3D"description" content=3D"Cheat sheets for various stuff">
<meta property=3D"og:description" content=3D"Cheat sheets for various stuff=
">
<link rel=3D"canonical" href=3D"https://bertvv.github.io/cheat-sheets/MySQL=
-MariaDB.html">
<meta property=3D"og:url" content=3D"https://bertvv.github.io/cheat-sheets/=
MySQL-MariaDB.html">
<meta property=3D"og:site_name" content=3D"cheat-sheets">

<!-- End Jekyll SEO tag -->

    <link rel=3D"stylesheet" href=3D"https://bertvv.github.io/cheat-sheets/=
assets/css/style.css?v=3Def3dd650c2c4c9bcc8c3f5234b9190a953ad2449">
    <!--[if lt IE 9]>
    <script src=3D"//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5sh=
iv.min.js"></script>
    <![endif]-->
  </head>
  <body>
    <div class=3D"wrapper">
      <header>
        <h1><a href=3D"https://bertvv.github.io/cheat-sheets/">cheat-sheets=
</a></h1>
       =20
       =20

        <p>Cheat sheets for various stuff</p>

       =20
        <p class=3D"view"><a href=3D"https://github.com/bertvv/cheat-sheets=
">View the Project on GitHub <small>bertvv/cheat-sheets</small></a></p>
       =20

       =20

       =20
      </header>
      <section>

      <h1 id=3D"useful-mysqlmariadb-queries">Useful MySQL/MariaDB queries</=
h1>

<h2 id=3D"cli">CLI</h2>

<ul>
  <li>
    <p>Log in as root (password is prompted):</p>

    <div class=3D"language-plaintext highlighter-rouge"><div class=3D"highl=
ight"><pre class=3D"highlight"><code>  mysql -u root -p
</code></pre></div>    </div>
  </li>
  <li>
    <p>Log in as root with password <code class=3D"language-plaintext highl=
ighter-rouge">sekrit</code> (<strong>REMARK</strong>: no space allowed betw=
een <code class=3D"language-plaintext highlighter-rouge">-p</code> and the =
password):</p>

    <div class=3D"language-plaintext highlighter-rouge"><div class=3D"highl=
ight"><pre class=3D"highlight"><code>  mysql -u root -psekrit
</code></pre></div>    </div>
  </li>
  <li>
    <p>Log in as <code class=3D"language-plaintext highlighter-rouge">user<=
/code> on another <code class=3D"language-plaintext highlighter-rouge">host=
</code>, and use database <code class=3D"language-plaintext highlighter-rou=
ge">mydb</code> (password is prompted):</p>

    <div class=3D"language-plaintext highlighter-rouge"><div class=3D"highl=
ight"><pre class=3D"highlight"><code>  mysql -h host -u user -p mydb
</code></pre></div>    </div>
  </li>
  <li>
    <p>Setting the root password (after clean install):</p>

    <div class=3D"language-plaintext highlighter-rouge"><div class=3D"highl=
ight"><pre class=3D"highlight"><code>  mysqladmin password "my new password=
"
</code></pre></div>    </div>
  </li>
</ul>

<h2 id=3D"queries">Queries</h2>

<p>First log in as root and use the <code class=3D"language-plaintext highl=
ighter-rouge">mysql</code> database: <code class=3D"language-plaintext high=
lighter-rouge">mysql -uroot -p mysql</code> (password is prompted). Don=E2=
=80=99t forget that every query must be terminated with <code class=3D"lang=
uage-plaintext highlighter-rouge">;</code></p>

<p>In the overview below, CAPITALIZED words are part of the SQL syntax, low=
ercase words are names of tables, columns, etc.</p>

<table>
  <thead>
    <tr>
      <th style=3D"text-align: left">Task</th>
      <th style=3D"text-align: left">Query</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style=3D"text-align: left">List databases</td>
      <td style=3D"text-align: left"><code class=3D"language-plaintext high=
lighter-rouge">SHOW DATABASES;</code></td>
    </tr>
    <tr>
      <td style=3D"text-align: left">Change active database</td>
      <td style=3D"text-align: left"><code class=3D"language-plaintext high=
lighter-rouge">USE dbname;</code></td>
    </tr>
    <tr>
      <td style=3D"text-align: left">Change to the =E2=80=9Csystem=E2=80=9D=
 database</td>
      <td style=3D"text-align: left"><code class=3D"language-plaintext high=
lighter-rouge">USE mysql;</code></td>
    </tr>
    <tr>
      <td style=3D"text-align: left">Show tables in active database</td>
      <td style=3D"text-align: left"><code class=3D"language-plaintext high=
lighter-rouge">SHOW TABLES;</code></td>
    </tr>
    <tr>
      <td style=3D"text-align: left">Show table properties</td>
      <td style=3D"text-align: left"><code class=3D"language-plaintext high=
lighter-rouge">DESCRIBE tablename;</code></td>
    </tr>
    <tr>
      <td style=3D"text-align: left">List all users</td>
      <td style=3D"text-align: left"><code class=3D"language-plaintext high=
lighter-rouge">SELECT user,host,password FROM mysql.user;</code></td>
    </tr>
    <tr>
      <td style=3D"text-align: left">List databases</td>
      <td style=3D"text-align: left"><code class=3D"language-plaintext high=
lighter-rouge">SELECT host,db,user FROM mysql.db;</code></td>
    </tr>
    <tr>
      <td style=3D"text-align: left">Quit</td>
      <td style=3D"text-align: left"><code class=3D"language-plaintext high=
lighter-rouge">exit</code> or <code class=3D"language-plaintext highlighter=
-rouge">Ctrl-D</code></td>
    </tr>
  </tbody>
</table>

<h2 id=3D"secure-installation">Secure installation</h2>

<p>Most HOWTOs suggest to run the <code class=3D"language-plaintext highlig=
hter-rouge">mysql_secure_installation</code> script after installing MariaD=
B/MySQL. Since that is an interactive script that constantly asks for user =
input, it is not suitable for automated setups. There are quick-and-dirty s=
olutions by using either <a href=3D"https://gist.github.com/Mins/4602864">e=
xpect</a> or a <a href=3D"http://tldrdevnotes.com/secure-mysql-install-non-=
interactive-bash-script">here document</a>, but these feel kludgy to me.</p=
>

<p>What happens in the script is basically setting the database root passwo=
rd and removing a test database and users.</p>

<h3 id=3D"setting-the-root-password">Setting the root password</h3>

<p>The following snippet will set the database root password if it wasn=E2=
=80=99t set before, and will do nothing if it was. The command <code class=
=3D"language-plaintext highlighter-rouge">mysqladmin -u root status</code> =
will succeed if the password was not set, and in that case the password wil=
l be set to the specified value.</p>

<div class=3D"language-bash highlighter-rouge"><div class=3D"highlight"><pr=
e class=3D"highlight"><code><span class=3D"nb">readonly </span><span class=
=3D"nv">mariadb_root_password</span><span class=3D"o">=3D</span>fogMeHud8

<span class=3D"k">if </span>mysqladmin <span class=3D"nt">-u</span> root st=
atus <span class=3D"o">&gt;</span> /dev/null 2&gt;&amp;1<span class=3D"p">;=
</span> <span class=3D"k">then
  </span>mysqladmin password <span class=3D"s2">"</span><span class=3D"k">$=
{</span><span class=3D"nv">mariadb_root_password</span><span class=3D"k">}<=
/span><span class=3D"s2">"</span> <span class=3D"o">&gt;</span> /dev/null 2=
&gt;&amp;1
  <span class=3D"nb">printf</span> <span class=3D"s2">"database root passwo=
rd set</span><span class=3D"se">\n</span><span class=3D"s2">"</span>
<span class=3D"k">else
  </span><span class=3D"nb">printf</span> <span class=3D"s2">"skipping data=
base root password: already set</span><span class=3D"se">\n</span><span cla=
ss=3D"s2">"</span>
<span class=3D"k">fi</span>
</code></pre></div></div>

<p>This code snippet is <a href=3D"https://en.wikipedia.org/wiki/Idempotenc=
e">idempotent</a>, i.e. you can run it several times with the same end resu=
lt and without it failing if a root password was set previously.</p>

<h3 id=3D"removing-test-database-and-users">Removing test database and user=
s</h3>

<p>After setting the root password with the previous code, the following sn=
ippet will remove the test database and anonymous users. The database root =
user is set to only be allowed to log in from localhost.</p>

<div class=3D"language-bash highlighter-rouge"><div class=3D"highlight"><pr=
e class=3D"highlight"><code>mysql <span class=3D"nt">--user</span><span cla=
ss=3D"o">=3D</span>root <span class=3D"nt">--password</span><span class=3D"=
o">=3D</span><span class=3D"s2">"</span><span class=3D"k">${</span><span cl=
ass=3D"nv">mariadb_root_password</span><span class=3D"k">}</span><span clas=
s=3D"s2">"</span> mysql <span class=3D"o">&lt;&lt;</span><span class=3D"no"=
>_EOF_</span><span class=3D"sh">
DELETE FROM user WHERE User=3D'';
DELETE FROM user WHERE User=3D'root' AND host NOT IN ('localhost', '127.0.0=
.1', '::1');
DROP DATABASE IF EXISTS test;
DELETE FROM db WHERE db=3D'test' OR db=3D'test</span><span class=3D"se">\\<=
/span><span class=3D"sh">_%';
FLUSH PRIVILEGES;
</span><span class=3D"no">_EOF_
</span></code></pre></div></div>

<h2 id=3D"create-a-new-database-and-user">Create a new database and user</h=
2>

<p>Create a database and a user with all privileges for that database (warn=
ing: user/db are first removed if they exist):</p>

<div class=3D"language-bash highlighter-rouge"><div class=3D"highlight"><pr=
e class=3D"highlight"><code><span class=3D"nb">readonly </span><span class=
=3D"nv">db_user</span><span class=3D"o">=3D</span>myuser
<span class=3D"nb">readonly </span><span class=3D"nv">db_name</span><span c=
lass=3D"o">=3D</span>mydb
<span class=3D"nb">readonly </span><span class=3D"nv">db_password</span><sp=
an class=3D"o">=3D</span>TicJart2

mysql <span class=3D"nt">--user</span><span class=3D"o">=3D</span>root <spa=
n class=3D"nt">--password</span><span class=3D"o">=3D</span><span class=3D"=
s2">"</span><span class=3D"k">${</span><span class=3D"nv">mariadb_root_pass=
word</span><span class=3D"k">}</span><span class=3D"s2">"</span> <span clas=
s=3D"o">&lt;&lt;</span><span class=3D"no">_EOF_</span><span class=3D"sh">
DROP USER IF EXISTS </span><span class=3D"k">${</span><span class=3D"nv">db=
_user</span><span class=3D"k">}</span><span class=3D"sh">;
DROP DATABASE IF EXISTS </span><span class=3D"k">${</span><span class=3D"nv=
">db_name</span><span class=3D"k">}</span><span class=3D"sh">;
CREATE DATABASE </span><span class=3D"k">${</span><span class=3D"nv">db_nam=
e</span><span class=3D"k">}</span><span class=3D"sh">;
GRANT ALL ON </span><span class=3D"k">${</span><span class=3D"nv">db_name</=
span><span class=3D"k">}</span><span class=3D"sh">.* TO '</span><span class=
=3D"k">${</span><span class=3D"nv">db_user</span><span class=3D"k">}</span>=
<span class=3D"sh">'@'%' IDENTIFIED BY PASSWORD('</span><span class=3D"k">$=
{</span><span class=3D"nv">db_password</span><span class=3D"k">}</span><spa=
n class=3D"sh">');
FLUSH PRIVILEGES;
</span><span class=3D"no">_EOF_
</span></code></pre></div></div>

<h2 id=3D"backuprestore">Backup/restore</h2>

<p>Let=E2=80=99s say you have a Drupal site that you want to back up/restor=
e. The database is <code class=3D"language-plaintext highlighter-rouge">dru=
pal</code>.</p>

<ul>
  <li>Backup: <code class=3D"language-plaintext highlighter-rouge">mysqldum=
p -u root -p drupal &gt; drupal_backup.sql</code></li>
  <li>Restore:
    <ul>
      <li>First, ensure that the <code class=3D"language-plaintext highligh=
ter-rouge">drupal</code> database exists (see above)</li>
      <li><code class=3D"language-plaintext highlighter-rouge">mysql -u roo=
t -p drupal &lt; drupal_backup.sql</code></li>
    </ul>
  </li>
</ul>


      </section>
      <footer>
       =20
        <p>This project is maintained by <a href=3D"https://github.com/bert=
vv">bertvv</a></p>
       =20
        <p><small>Hosted on GitHub Pages =E2=80=94 Theme by <a href=3D"http=
s://github.com/orderedlist">orderedlist</a></small></p>
      </footer>
    </div>
   =20
   =20
 =20

</body></html>
------MultipartBoundary--cGYyp5WzfjFzKzPd8YSj7vRRnF5ZSX5dfTdd2utQzR----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://bertvv.github.io/cheat-sheets/assets/css/style.css?v=ef3dd650c2c4c9bcc8c3f5234b9190a953ad2449

@charset "utf-8";

@font-face { font-family: "Noto Sans"; font-weight: 400; font-style: normal=
; src: url("../fonts/Noto-Sans-regular/Noto-Sans-regular.eot?#iefix") forma=
t("embedded-opentype"), local("Noto Sans"), local("Noto-Sans-regular"), url=
("../fonts/Noto-Sans-regular/Noto-Sans-regular.woff2") format("woff2"), url=
("../fonts/Noto-Sans-regular/Noto-Sans-regular.woff") format("woff"), url("=
../fonts/Noto-Sans-regular/Noto-Sans-regular.ttf") format("truetype"), url(=
"../fonts/Noto-Sans-regular/Noto-Sans-regular.svg#NotoSans") format("svg");=
 }

@font-face { font-family: "Noto Sans"; font-weight: 700; font-style: normal=
; src: url("../fonts/Noto-Sans-700/Noto-Sans-700.eot?#iefix") format("embed=
ded-opentype"), local("Noto Sans Bold"), local("Noto-Sans-700"), url("../fo=
nts/Noto-Sans-700/Noto-Sans-700.woff2") format("woff2"), url("../fonts/Noto=
-Sans-700/Noto-Sans-700.woff") format("woff"), url("../fonts/Noto-Sans-700/=
Noto-Sans-700.ttf") format("truetype"), url("../fonts/Noto-Sans-700/Noto-Sa=
ns-700.svg#NotoSans") format("svg"); }

@font-face { font-family: "Noto Sans"; font-weight: 400; font-style: italic=
; src: url("../fonts/Noto-Sans-italic/Noto-Sans-italic.eot?#iefix") format(=
"embedded-opentype"), local("Noto Sans Italic"), local("Noto-Sans-italic"),=
 url("../fonts/Noto-Sans-italic/Noto-Sans-italic.woff2") format("woff2"), u=
rl("../fonts/Noto-Sans-italic/Noto-Sans-italic.woff") format("woff"), url("=
../fonts/Noto-Sans-italic/Noto-Sans-italic.ttf") format("truetype"), url(".=
./fonts/Noto-Sans-italic/Noto-Sans-italic.svg#NotoSans") format("svg"); }

@font-face { font-family: "Noto Sans"; font-weight: 700; font-style: italic=
; src: url("../fonts/Noto-Sans-700italic/Noto-Sans-700italic.eot?#iefix") f=
ormat("embedded-opentype"), local("Noto Sans Bold Italic"), local("Noto-San=
s-700italic"), url("../fonts/Noto-Sans-700italic/Noto-Sans-700italic.woff2"=
) format("woff2"), url("../fonts/Noto-Sans-700italic/Noto-Sans-700italic.wo=
ff") format("woff"), url("../fonts/Noto-Sans-700italic/Noto-Sans-700italic.=
ttf") format("truetype"), url("../fonts/Noto-Sans-700italic/Noto-Sans-700it=
alic.svg#NotoSans") format("svg"); }

.highlight table td { padding: 5px; }

.highlight table pre { margin: 0px; }

.highlight .cm { color: rgb(153, 153, 136); font-style: italic; }

.highlight .cp { color: rgb(153, 153, 153); font-weight: bold; }

.highlight .c1 { color: rgb(153, 153, 136); font-style: italic; }

.highlight .cs { color: rgb(153, 153, 153); font-weight: bold; font-style: =
italic; }

.highlight .c, .highlight .cd { color: rgb(153, 153, 136); font-style: ital=
ic; }

.highlight .err { color: rgb(166, 23, 23); background-color: rgb(227, 210, =
210); }

.highlight .gd { color: rgb(0, 0, 0); background-color: rgb(255, 221, 221);=
 }

.highlight .ge { color: rgb(0, 0, 0); font-style: italic; }

.highlight .gr { color: rgb(170, 0, 0); }

.highlight .gh { color: rgb(153, 153, 153); }

.highlight .gi { color: rgb(0, 0, 0); background-color: rgb(221, 255, 221);=
 }

.highlight .go { color: rgb(136, 136, 136); }

.highlight .gp { color: rgb(85, 85, 85); }

.highlight .gs { font-weight: bold; }

.highlight .gu { color: rgb(170, 170, 170); }

.highlight .gt { color: rgb(170, 0, 0); }

.highlight .kc { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .kd { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .kn { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .kp { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .kr { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .kt { color: rgb(68, 85, 136); font-weight: bold; }

.highlight .k, .highlight .kv { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .mf { color: rgb(0, 153, 153); }

.highlight .mh { color: rgb(0, 153, 153); }

.highlight .il { color: rgb(0, 153, 153); }

.highlight .mi { color: rgb(0, 153, 153); }

.highlight .mo { color: rgb(0, 153, 153); }

.highlight .m, .highlight .mb, .highlight .mx { color: rgb(0, 153, 153); }

.highlight .sb { color: rgb(221, 17, 68); }

.highlight .sc { color: rgb(221, 17, 68); }

.highlight .sd { color: rgb(221, 17, 68); }

.highlight .s2 { color: rgb(221, 17, 68); }

.highlight .se { color: rgb(221, 17, 68); }

.highlight .sh { color: rgb(221, 17, 68); }

.highlight .si { color: rgb(221, 17, 68); }

.highlight .sx { color: rgb(221, 17, 68); }

.highlight .sr { color: rgb(0, 153, 38); }

.highlight .s1 { color: rgb(221, 17, 68); }

.highlight .ss { color: rgb(153, 0, 115); }

.highlight .s { color: rgb(221, 17, 68); }

.highlight .na { color: rgb(0, 128, 128); }

.highlight .bp { color: rgb(153, 153, 153); }

.highlight .nb { color: rgb(0, 134, 179); }

.highlight .nc { color: rgb(68, 85, 136); font-weight: bold; }

.highlight .no { color: rgb(0, 128, 128); }

.highlight .nd { color: rgb(60, 93, 93); font-weight: bold; }

.highlight .ni { color: rgb(128, 0, 128); }

.highlight .ne { color: rgb(153, 0, 0); font-weight: bold; }

.highlight .nf { color: rgb(153, 0, 0); font-weight: bold; }

.highlight .nl { color: rgb(153, 0, 0); font-weight: bold; }

.highlight .nn { color: rgb(85, 85, 85); }

.highlight .nt { color: rgb(0, 0, 128); }

.highlight .vc { color: rgb(0, 128, 128); }

.highlight .vg { color: rgb(0, 128, 128); }

.highlight .vi { color: rgb(0, 128, 128); }

.highlight .nv { color: rgb(0, 128, 128); }

.highlight .ow { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .o { color: rgb(0, 0, 0); font-weight: bold; }

.highlight .w { color: rgb(187, 187, 187); }

.highlight { background-color: rgb(248, 248, 248); }

body { background-color: rgb(255, 255, 255); padding: 50px; font: 400 14px =
/ 1.5 "Noto Sans", "Helvetica Neue", Helvetica, Arial, sans-serif; color: r=
gb(114, 114, 114); }

h1, h2, h3, h4, h5, h6 { color: rgb(34, 34, 34); margin: 0px 0px 20px; }

p, ul, ol, table, pre, dl { margin: 0px 0px 20px; }

h1, h2, h3 { line-height: 1.1; }

h1 { font-size: 28px; }

h2 { color: rgb(57, 57, 57); }

h3, h4, h5, h6 { color: rgb(73, 73, 73); }

a { color: rgb(38, 124, 185); text-decoration: none; }

a:hover, a:focus { color: rgb(0, 102, 153); font-weight: bold; }

a small { font-size: 11px; color: rgb(119, 119, 119); margin-top: -0.3em; d=
isplay: block; }

a:hover small { color: rgb(119, 119, 119); }

.wrapper { width: 860px; margin: 0px auto; }

blockquote { border-left: 1px solid rgb(229, 229, 229); margin: 0px; paddin=
g: 0px 0px 0px 20px; font-style: italic; }

code, pre { font-family: Monaco, "Bitstream Vera Sans Mono", "Lucida Consol=
e", Terminal, Consolas, "Liberation Mono", "DejaVu Sans Mono", "Courier New=
", monospace; color: rgb(51, 51, 51); }

pre { padding: 8px 15px; background: rgb(248, 248, 248); border-radius: 5px=
; border: 1px solid rgb(229, 229, 229); overflow-x: auto; }

table { width: 100%; border-collapse: collapse; }

th, td { text-align: left; padding: 5px 10px; border-bottom: 1px solid rgb(=
229, 229, 229); }

dt { color: rgb(68, 68, 68); font-weight: 700; }

th { color: rgb(68, 68, 68); }

img { max-width: 100%; }

header { width: 270px; float: left; position: fixed; -webkit-font-smoothing=
: subpixel-antialiased; }

header ul { list-style: none; height: 40px; padding: 0px; background: rgb(2=
44, 244, 244); border-radius: 5px; border: 1px solid rgb(224, 224, 224); wi=
dth: 270px; }

header li { width: 89px; float: left; border-right: 1px solid rgb(224, 224,=
 224); height: 40px; }

header li:first-child a { border-radius: 5px 0px 0px 5px; }

header li:last-child a { border-radius: 0px 5px 5px 0px; }

header ul a { line-height: 1; font-size: 11px; color: rgb(103, 103, 103); d=
isplay: block; text-align: center; padding-top: 6px; height: 34px; }

header ul a:hover, header ul a:focus { color: rgb(103, 92, 92); font-weight=
: bold; }

header ul a:active { background-color: rgb(240, 240, 240); }

strong { color: rgb(34, 34, 34); font-weight: 700; }

header ul li + li + li { border-right: none; width: 89px; }

header ul a strong { font-size: 14px; display: block; color: rgb(34, 34, 34=
); }

section { width: 500px; float: right; padding-bottom: 50px; }

small { font-size: 11px; }

hr { border: 0px; background: rgb(229, 229, 229); height: 1px; margin: 0px =
0px 20px; }

footer { width: 270px; float: left; position: fixed; bottom: 50px; -webkit-=
font-smoothing: subpixel-antialiased; }

@media print, screen and (max-width: 960px) {
  div.wrapper { width: auto; margin: 0px; }
  header, section, footer { float: none; position: static; width: auto; }
  header { padding-right: 320px; }
  section { border-style: solid; border-color: rgb(229, 229, 229); border-i=
mage: initial; border-width: 1px 0px; padding: 20px 0px; margin: 0px 0px 20=
px; }
  header a small { display: inline; }
  header ul { position: absolute; right: 50px; top: 52px; }
}

@media print, screen and (max-width: 720px) {
  body { overflow-wrap: break-word; }
  header { padding: 0px; }
  header ul, header p.view { position: static; }
  pre, code { overflow-wrap: normal; }
}

@media print, screen and (max-width: 480px) {
  body { padding: 15px; }
  header ul { width: 99%; }
  header li, header ul li + li + li { width: 33%; }
}

@media print {
  body { padding: 0.4in; font-size: 12pt; color: rgb(68, 68, 68); }
}
------MultipartBoundary--cGYyp5WzfjFzKzPd8YSj7vRRnF5ZSX5dfTdd2utQzR------
